document.getElementById('markAllAsRead').addEventListener('click', function() {
    document.querySelectorAll('.notification-dot').forEach(dot => {
        dot.classList.remove('notification-dot-blue');
        currentView = 'all';
        unreadNotifications = []
        const sortedNotifications = sortNotifications(allNotifications);
        const firstFiveNotifications = sortedNotifications.slice(0, displayedNotificationsCount);
        updateNotificationsView();
        updateNotificationCount();
        changeTab(currentView);
        showNotifications(firstFiveNotifications);
    });
});

function updateNotificationsView() {
    let notificationsToShow = [];
    if (currentView === 'unread') {
        notificationsToShow = [...unreadNotifications];
        if(unreadNotifications.length === 0) {
            notificationsToShow = [...readNotifications];
        }
    } 
    else if(currentView === 'all') { 
        notificationsToShow = [...readNotifications];
    }
    const sortedNotifications = sortNotifications(notificationsToShow);
    const firstFiveNotifications = sortedNotifications.slice(0, displayedNotificationsCount);
    showNotifications(firstFiveNotifications);
 if (displayedNotificationsCount >= notificationsToShow.length) {
    document.getElementById('loadMore').style.display = "none";
} else {
    document.getElementById('loadMore').style.display = "block"; // או כל ערך נוסף המתאים להצגה
}
}




var readNotifications = [];
var unreadNotifications = [];
var allNotifications = [];
var currentView = 'unread';
var displayedNotificationsCount = 5;
var newNotificationsAlertCount =0;

document.addEventListener('DOMContentLoaded', () => {
    updateNotificationCount();
})

document.addEventListener('DOMContentLoaded', () => {
    const textArea = document.getElementById('addNotificationContent'); 
    const wordCountDisplay = document.getElementById('wordCount');
    function updateWordCount() {
        const textLength = textArea.value.length;
        wordCountDisplay.textContent = `${textLength}/100`;
    }
    textArea.addEventListener('input', updateWordCount);
    updateWordCount();
});

document.getElementById('notificationIcon').addEventListener('click', openNotificationsSidebar);
document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', function() {
        changeTab(this.getAttribute('data-tab'));
    });
});

document.getElementById('markAllAsRead').addEventListener('click', function() {
    document.querySelectorAll('.notification-dot').forEach(dot => {
        dot.classList.remove('notification-dot-blue');
        currentView = 'all';
        const sortedNotifications = sortNotifications(allNotifications);
        const firstFiveNotifications = sortedNotifications.slice(0, displayedNotificationsCount);
        updateNotificationsView();
        changeTab(currentView)
        showNotifications(firstFiveNotifications)
    });
});

document.querySelectorAll('.notification').forEach(notification => {
    notification.addEventListener('click', function(event) {
        const notificationId = this.getAttribute('data-notification-id');
        console.log(notificationId)
    });
});

document.getElementById('loadMore').addEventListener('click', loadMoreNotifications);
document.getElementById('addNotification').addEventListener('click', openAddNotificationWindow);
document.getElementById('closeAddNotificationWindow').addEventListener('click', closeAddNotificationWindow);
document.getElementById('saveNotificationButton').addEventListener('click', showSuccessMessage);

function convertDateFromString(dateString) {
    const parts = dateString.split(' '); 
    const dateParts = parts[0].split('/'); 
    const timeParts = parts[1].split(':'); 
    const date = new Date(
        dateParts[2],dateParts[1] - 1, dateParts[0],
         timeParts[0], timeParts[1]);
    return date;
}

function sortNotifications(notifications) {
    return notifications.sort((a, b) => {
        const dateA = convertDateFromString(a.date);
        const dateB = convertDateFromString(b.date);
        return dateB - dateA;
    });
}

function showNotifications(notifications) {
    const templateSource = document.getElementById('notificationTemplate').innerHTML;
    const compiledTemplate = Handlebars.compile(templateSource);
    const sortedNotifications = sortNotifications(notifications);
    const html = compiledTemplate({ notifications: sortedNotifications });
    document.getElementById('notificationsContainer').innerHTML = html;
}

function updateNotificationsView() {
    let notificationsToShow = [];
    if (currentView === 'unread') {
        notificationsToShow = [...unreadNotifications];
        if(unreadNotifications.length === 0) {
            notificationsToShow = [...readNotifications];
        }
    } 
    else if(currentView === 'all') { 
        notificationsToShow = [...readNotifications];
    }
    const sortedNotifications = sortNotifications(notificationsToShow);
    const firstFiveNotifications = sortedNotifications.slice(0, displayedNotificationsCount);
    showNotifications(firstFiveNotifications);
    if (displayedNotificationsCount >= notificationsToShow.length) {
        document.getElementById('loadMore').style.display = 'none';
    }
    else {
        document.getElementById('loadMore').style.display = 'flex';
    }
}

function fetchNotifications() {
    fetch('/task.json') 
    .then(response => response.json())
    .then(data => {
    allNotifications = data.data[0].notifications;
    console.log('all notifications: ', allNotifications);
    unreadNotifications = allNotifications.filter(notification => !notification.read);
    console.log('this is unread: ', unreadNotifications);
    readNotifications = allNotifications.filter(notification => notification.read);
    console.log('this is read: ', readNotifications);
    if(unreadNotifications.length === 0) {
        changeTab('all');
    }
    updateNotificationsView();
    updateNotificationCount();
})
.catch(error => console.error('Error:', error));
}

document.getElementById('addNotificationForm').addEventListener('submit', function(e) {
    e.preventDefault(); 

    const id = 0;
    const title = document.getElementById('addNotificationTitle').value;
    const content = document.getElementById('addNotificationContent').value;
    const date = new Date().toISOString(); 
    const read = false;
    const newData = JSON.stringify({ id, title, content, date, read });
    

    fetch('/add-new-notification', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify({ title: title, content: content })
    })
    .then(response => response.json())
    .then(data => {
    alert('התראה נוספה בהצלחה!');
    document.getElementById('addNotificationWindow').style.display = 'none';
    document.getElementById('addNotificationForm').reset();
    })
    .catch(error => console.error('Error:', error));
    closeAddNotificationWindow();
    fetchNotifications();

});

function loadMoreNotifications() {
    displayedNotificationsCount += 5; 
    updateNotificationsView(); 
}

function openNotificationsSidebar() {
    document.getElementById('notificationsSidebar').style.display = 'flex';
    fetchNotifications();
}

function closeNotificationsSidebar() {
    document.getElementById('notificationsSidebar').style.display = 'none';
    displayedNotificationsCount = 5;
    updateNotificationsView();
}

function openAddNotificationWindow() {
    document.getElementById('addNotificationWindow').style.display = 'flex';
    document.getElementById('addNotificationTitle').focus();
}

function closeAddNotificationWindow() {
    document.getElementById('addNotificationWindow').style.display = 'none';
}

window.onload = function() {
    changeTab('unread'); 
    updateNotificationsView()
}

function changeTab(view) {
    currentView = view;
    const tabs = document.querySelectorAll('.tab');
    tabs.forEach(tab => {
        tab.classList.remove('selected');
    });
    const selectedTabElement = document.querySelector(`.tab[data-tab="${view}"]`);
    if (selectedTabElement) {
        selectedTabElement.classList.add('selected');
    }
    updateNotificationsView();
}

function updateNotificationCount() {
    const badge = document.querySelector('.notification-badge-main');
    if (unreadNotifications.length > 0) {
        newNotificationsAlertCount = unreadNotifications.length;
        badge.style.display = 'flex';
        badge.innerText = newNotificationsAlertCount;
    } else {
        badge.style.display = 'none';
    }
}

function showSuccessMessage() {
    const successMessage = document.getElementById('successMessage');
    successMessage.style.display = 'block';
    setTimeout(function() {
        successMessage.style.display = 'none';
    }, 3000);
}
